<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>QR Code Generator</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/qrcode@1.5.1/build/qrcode.min.js"></script>
    <style>
        :root {
            --primary: #6366f1;
            --secondary: #8b5cf6;
            --dark: #1e293b;
            --light: #f1f5f9;
            --success: #10b981;
            --danger: #ef4444;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', system-ui, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #0f172a, #1e3a8a);
            color: var(--light);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
            line-height: 1.6;
        }
        
        .card {
            background: rgba(30, 41, 59, 0.7);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(255, 255, 255, 0.1);
            width: 100%;
            max-width: 500px;
            text-align: center;
        }
        
        h1 {
            font-size: 2.5rem;
            background: linear-gradient(to right, #8b5cf6, #ec4899);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            margin-bottom: 10px;
        }
        
        .subtitle {
            color: #94a3b8;
            margin-bottom: 30px;
            font-size: 1.1rem;
        }
        
        .input-group {
            margin-bottom: 25px;
        }
        
        .input-field {
            width: 100%;
            padding: 16px 20px;
            border-radius: 12px;
            border: 2px solid #334155;
            background: #1e293b;
            color: white;
            font-size: 1rem;
            transition: all 0.3s ease;
        }
        
        .input-field:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.3);
        }
        
        .btn {
            background: linear-gradient(to right, var(--primary), var(--secondary));
            color: white;
            border: none;
            padding: 16px 30px;
            border-radius: 12px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            width: 100%;
            margin-top: 15px;
        }
        
        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 20px rgba(99, 102, 241, 0.3);
        }
        
        .btn:active {
            transform: translateY(-1px);
        }
        
        .btn i {
            font-size: 1.2rem;
        }
        
        #preview {
            background: white;
            border-radius: 12px;
            margin: 30px 0;
            min-height: 250px;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 25px;
            transition: all 0.3s ease;
        }
        
        #qrcode-canvas {
            max-width: 100%;
            max-height: 250px;
            border-radius: 8px;
            transition: transform 0.3s ease;
        }
        
        #qrcode-canvas:hover {
            transform: scale(1.05);
        }
        
        .message {
            padding: 15px;
            border-radius: 12px;
            margin-top: 20px;
            text-align: center;
            font-weight: 500;
            display: none;
        }
        
        .success {
            background: rgba(16, 185, 129, 0.2);
            border: 1px solid var(--success);
            color: var(--success);
        }
        
        .error {
            background: rgba(239, 68, 68, 0.2);
            border: 1px solid var(--danger);
            color: var(--danger);
        }
        
        .powered {
            text-align: center;
            margin-top: 30px;
            color: #64748b;
            font-size: 0.9rem;
        }
        
        .download-btn {
            background: rgba(59, 130, 246, 0.2);
            border: 1px solid #3b82f6;
            color: #3b82f6;
            padding: 16px;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            margin-top: 15px;
            font-weight: 600;
        }
        
        .download-btn:hover {
            background: rgba(59, 130, 246, 0.3);
            transform: translateY(-2px);
        }
        
        @media (max-width: 480px) {
            .card {
                padding: 25px;
            }
            
            h1 {
                font-size: 2rem;
            }
        }
    </style>
</head>
<body>
    <div class="card">
        <h1>QR Code Generator</h1>
        <p class="subtitle">Create and download QR codes instantly</p>
        
        <div class="input-group">
            <input type="text" id="textInput" class="input-field" 
                   placeholder="https://example.com or any text..." 
                   autocomplete="off">
        </div>
        
        <div id="preview">
            <p>QR Code Preview Will Appear Here</p>
        </div>
        
        <div class="download-btn" id="downloadBtn">
            <i class="fas fa-download"></i> Download QR Code
        </div>
        
        <div id="message" class="message"></div>
        
        <div class="powered">
            <p>Powered by QR Generator</p>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const input = document.getElementById('textInput');
            const downloadBtn = document.getElementById('downloadBtn');
            
            // Focus input on load
            input.focus();
            
            // Create QR code on input
            input.addEventListener('input', function() {
                const text = this.value.trim();
                updateQRPreview(text);
                
                // Enable/disable download button
                downloadBtn.style.display = text ? 'flex' : 'none';
            });
            
            // Download button event
            downloadBtn.addEventListener('click', downloadQR);
        });
        
        function updateQRPreview(text) {
            const previewEl = document.getElementById('preview');
            
            if (text) {
                try {
                    // Clear previous QR code
                    previewEl.innerHTML = '';
                    
                    // Create canvas for QR code
                    const canvas = document.createElement('canvas');
                    canvas.id = 'qrcode-canvas';
                    previewEl.appendChild(canvas);
                    
                    // Generate QR code
                    QRCode.toCanvas(canvas, text, {
                        width: 200,
                        margin: 1,
                        color: {
                            dark: '#000000',
                            light: '#ffffff'
                        }
                    }, function(error) {
                        if (error) {
                            previewEl.innerHTML = '<p>Error generating preview</p>';
                            console.error(error);
                        }
                    });
                } catch (error) {
                    previewEl.innerHTML = '<p>Error generating preview</p>';
                    console.error(error);
                }
            } else {
                previewEl.innerHTML = '<p>QR Code Preview Will Appear Here</p>';
                document.getElementById('downloadBtn').style.display = 'none';
            }
        }
        
        function downloadQR() {
            const canvas = document.getElementById('qrcode-canvas');
            const messageEl = document.getElementById('message');
            
            if (!canvas) {
                showMessage('Please generate a QR code first.', 'error');
                return;
            }
            
            try {
                // Show loading state
                const btn = document.getElementById('downloadBtn');
                const originalHTML = btn.innerHTML;
                btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Downloading...';
                
                // Create download link
                const url = canvas.toDataURL('image/png');
                const a = document.createElement('a');
                a.href = url;
                a.download = 'qrcode.png';
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                
                // Reset button after a short delay
                setTimeout(() => {
                    btn.innerHTML = originalHTML;
                    showMessage('QR code downloaded successfully!', 'success');
                }, 500);
            } catch (err) {
                showMessage('Error downloading QR code.', 'error');
                console.error(err);
                btn.innerHTML = '<i class="fas fa-download"></i> Download QR Code';
            }
        }
        
        function showMessage(text, type) {
            const messageEl = document.getElementById('message');
            messageEl.textContent = text;
            messageEl.className = `message ${type}`;
            messageEl.style.display = 'block';
            
            // Auto-hide success messages
            if (type === 'success') {
                setTimeout(() => {
                    messageEl.style.display = 'none';
                }, 3000);
            }
        }
    </script>
</body>
</html>
